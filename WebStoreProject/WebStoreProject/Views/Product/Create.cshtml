@model WebStoreProject.Models.Product


<h2>Create</h2>


@using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price_brutto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Price_brutto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price_brutto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryID, ViewBag.Categories as SelectList, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VatID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.VatID, ViewBag.VatList as SelectList, "ZWOLNIONY Z PODATKU VAT", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogoImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="LogoImageFile" id="LogoImageFile" onchange="showLogoImg(this)" required/>
                <img style="margin-top: 10px;" id="logo_img" height="100" width="90" hidden/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DetailsImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="DetailsImageFile" id="DetailsImageFile" onchange="showDetailsImg(this)" required/>
                <img style="margin-top: 10px;" id="details_img" height="200" width="200" hidden />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextAreaFor(model => model.Description, new { rows = 5, cols = 50, @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <input type="button" value="Back to List" class="btn btn-primary" onclick="location.href='@Url.Action("Index", "Product")'" />
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $("input[type='submit']").click(function () {
            tinyMCE.triggerSave();
        });

        $.validator.setDefaults({
            ignore: ''
        });

        function showLogoImg(input) {
            if (input.files && input.files[0]) {
                var filerdr = new FileReader();
                filerdr.onload = function (e) {
                    $('#logo_img').attr('src', e.target.result);
                    $('#logo_img').removeAttr('hidden');
                }
                filerdr.readAsDataURL(input.files[0]);
            }
        }

        function showDetailsImg(input) {
            if (input.files && input.files[0]) {
                var filerdr = new FileReader();
                filerdr.onload = function (e) {
                    $('#details_img').attr('src', e.target.result);
                    $('#details_img').removeAttr('hidden');
                }
                filerdr.readAsDataURL(input.files[0]);
            }
        }
    </script>
}
