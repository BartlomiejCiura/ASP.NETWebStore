@using WebStoreProject.Models;

<div class="modal fade" id="myModal" tabindex="-1" role="dialog"
     aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="myModalLabel">Summary</h4>
            </div>
            <div class="modal-body">
                <table class="table">
                    <tr>
                        <th>
                            @Html.DisplayName("Product name")
                        </th>
                        <th>
                            @Html.DisplayName("Quantity")
                        </th>
                        <th>
                            @Html.DisplayName("Price")
                        </th>
                    </tr>

                    @foreach (var cart in (List<ShoppingCart>)Session["Cart"])
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => cart.Product.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => cart.Quantity)
                            </td>
                            <td>
                                @{
                                    var brutto = String.Format("{0:N2}", @cart.Product.Price_brutto * @cart.Quantity);
                                    if (User.Identity.IsAuthenticated)
                                    {
                                        using (DBModel db = new DBModel())
                                        {
                                            Users user = db.Users.Where(u => u.Email.Equals(User.Identity.Name)).First();
                                            if (user.Price_display.Equals("NETTO"))
                                            {
                                                Product originalProduct = db.Product.Include("VAT").Where(s => s.Id == cart.Product.Id).FirstOrDefault();
                                                var netto = String.Format("{0:N2}", ((originalProduct.Price_brutto / (100 + originalProduct.VAT.Value)) * 100) * cart.Quantity);
                                                @netto
                                            }
                                            else
                                            {
                                                @brutto
                                            }
                                        }
                                    }
                                    else
                                    {
                                        @brutto
                                    }
                                }
                            </td>
                        </tr>
                                    }
                    <tr>
                        <td colspan="2"></td>
                        <td>
                            @{
                                List<ShoppingCart> temp = (List<ShoppingCart>)Session["Cart"];
                                var totalBrutto = String.Format("{0:N2}", temp.Sum(x => x.Product.Price_brutto * x.Quantity));
                                if (User.Identity.IsAuthenticated)
                                {
                                    using (DBModel db = new DBModel())
                                    {
                                        Users user = db.Users.Where(u => u.Email.Equals(User.Identity.Name)).First();
                                        if (user.Price_display.Equals("NETTO"))
                                        {
                                            var totalnetto = String.Format("{0:N2}", temp.Sum(x => ((x.Product.Price_brutto / (100 + x.Product.VAT.Value)) * 100) * x.Quantity));
                                            @totalnetto
                                        }
                                        else
                                        {
                                            @totalBrutto
                                        }
                                    }
                                }
                                else
                                {
                                    @totalBrutto
                                }
                            }
                        </td>
                    </tr>

                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Index", "Order")'">
                    <i class="fa fa-credit-card" aria-hidden="true"></i>
                    Purchase
                </button>
            </div>
        </div>
    </div>
</div>